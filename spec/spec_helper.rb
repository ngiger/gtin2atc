# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
#
$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
$:.unshift File.dirname(__FILE__)

require 'bundler/setup'
Bundler.require

require 'rspec'
require 'webmock/rspec'
require "gtin2atc/builder"


module Gtin2atc
  # we override here a few directories to make input/output when running specs to
  # be in different places compared when running
  SpecData       = File.join(File.dirname(__FILE__), 'data')
  WorkDir        = File.join(File.dirname(__FILE__), 'run')
end

require 'gtin2atc'

module ServerMockHelper
  def cleanup_directories_before_run
    dirs = [  Gtin2atc::WorkDir]
    dirs.each{ |dir| FileUtils.rm_rf(Dir.glob(File.join(dir, '*')), :verbose => false) }
    dirs.each{ |dir| FileUtils.makedirs(dir, :verbose => false) }
  end
  
  def setup_server_mocks
    setup_bag_xml_server_mock
  end
  def setup_bag_xml_server_mock
    # zip
    stub_zip_url = 'http://bag.e-mediat.net/SL2007.Web.External/File.axd?file=XMLPublications.zip'
    stub_response = File.read(File.join(Gtin2atc::SpecData, 'XMLPublications.zip'))
    stub_request(:get, stub_zip_url).
      with(:headers => {
        'Accept'          => '*/*',
        'Accept-Encoding' => 'gzip,deflate,identity',
        'Host'            => 'bag.e-mediat.net',
      }).
      to_return(
        :status  => 200,
        :headers => {'Content-Type' => 'application/zip; charset=utf-8'},
        :body    => stub_response)
  end
end

RSpec.configure do |config|
  config.run_all_when_everything_filtered = true
  config.filter_run :focus
  config.filter_run_excluding :slow
  #config.exclusion_filter = {:slow => true}

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'

  # Helper
  config.include(ServerMockHelper)
end
